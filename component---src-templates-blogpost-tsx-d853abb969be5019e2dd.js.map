{"version":3,"sources":["webpack://beardfriend-blog/./src/templates/blogpost.tsx"],"names":["Template","markdownRemark","data","frontmatter","html","headings","Image","featuredImg","childImageSharp","fluid","dispatch","useGlobalReducer","isMobile","useGlboalState","useState","isOpen","setIsOpen","useEffect","type","payload","title","TocButton","onClick","MobileTocContainer","style","fontSize","margin","marginBottom","map","TocList","depth","href","id","value","length","TocContainer","width","textAlign","includes","replace","BlogLayout","charSet","name","content","subtitle","Title","fontStyle","date","className","dangerouslySetInnerHTML","__html","styled","media","padding","marginLeft"],"mappings":"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","file":"component---src-templates-blogpost-tsx-d853abb969be5019e2dd.js","sourcesContent":["import Img from 'gatsby-image';\nimport MainLayout from '@Components/Layout/MainLayout';\nimport React, { useEffect, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport { useGlboalState, useGlobalReducer } from '@Contexts/context';\nimport media from '@Globals/theme';\nimport styled from 'styled-components';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}: any) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html, headings } = markdownRemark;\n  const Image = markdownRemark?.featuredImg?.childImageSharp?.fluid;\n  const dispatch = useGlobalReducer();\n  const { isMobile } = useGlboalState();\n  const [isOpen, setIsOpen] = useState(false);\n  useEffect(() => {\n    dispatch({ type: 'SET_TITLE', payload: frontmatter.title });\n  }, []);\n  return (\n    <MainLayout>\n      {isMobile ? (\n        <>\n          <TocButton isOpen={isOpen} onClick={() => setIsOpen(!isOpen)}>\n            목차\n          </TocButton>\n          {isOpen && (\n            <MobileTocContainer>\n              <h1 style={{ fontSize: '2rem', margin: `0 auto`, marginBottom: '1rem' }}>목차</h1>\n              {headings.map((data) => {\n                return (\n                  <TocList depth={data.depth} href={`#${data.id}`}>\n                    {data.value}\n                  </TocList>\n                );\n              })}\n            </MobileTocContainer>\n          )}\n        </>\n      ) : (\n        headings.length !== 0 && (\n          <TocContainer>\n            <h1 style={{ fontSize: '2rem', width: '100%', textAlign: 'center', marginBottom: '1rem' }}>목차</h1>\n            {headings.map((data) => {\n              return (\n                <TocList depth={data.depth} href={`#${data.id}`}>\n                  {data.value.includes('<center>')\n                    ? data.value.replace('<center>', '').replace('</center>', '')\n                    : data.value}\n                </TocList>\n              );\n            })}\n          </TocContainer>\n        )\n      )}\n\n      <BlogLayout>\n        <Helmet>\n          <meta charSet='utf-8' />\n          <meta name='viewport' content='width=device-width'></meta>\n          <title>{frontmatter.title} by 수염난친구</title>\n          <meta name='description' content={frontmatter.subtitle}></meta>\n          <meta name='og:title' content={`${frontmatter.title} by 수염난친구`}></meta>\n          <meta name='og:site_name' content='수염난친구블로그'></meta>\n          <meta name='twitter:title' content={`${frontmatter.title} by 수염난친구`}></meta>\n          <meta name='twitter:description' content={frontmatter.subtitle}></meta>\n          <meta name='twitter:card' content='summary'></meta>\n        </Helmet>\n        <Title>\n          <h1>{frontmatter.title}</h1>\n          <h3 style={{ fontStyle: 'italic' }}>{frontmatter.date}</h3>\n          {Image !== null && <Img fluid={Image} />}\n          <hr />\n        </Title>\n        <hr></hr>\n        <div className='html' dangerouslySetInnerHTML={{ __html: html }} />\n      </BlogLayout>\n    </MainLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      featuredImg {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        subtitle\n        title\n      }\n      headings {\n        depth\n        id\n        value\n      }\n    }\n  }\n`;\n\nconst BlogLayout = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  img {\n    width: 100%;\n  }\n  ${media.lg({\n    width: '600px',\n  })}\n  ${media.md({\n    width: '560px',\n  })}\n  ${media.sm({\n    width: '90%',\n  })}\n  ${media.xs({\n    width: '95%',\n  })}\n  .html {\n    width: 90%;\n    ${media.md({\n      width: '100%',\n    })}\n    margin: 0 auto;\n    p {\n      ${media.sm({\n        padding: `0.5rem 0`,\n      })}\n      padding: 0.5rem 0;\n    }\n    svg {\n      display: none;\n    }\n    h1 {\n      z-index: -1;\n    }\n    h2,\n    h3 {\n      z-index: -2;\n    }\n    h1,\n    h2,\n    h3 {\n      margin-top: -4rem;\n\n      padding-top: 6rem;\n      position: relative;\n      /* padding-top: 6rem;\n      height: 6rem;\n      top: -6rem; */\n    }\n\n    center {\n      font-size: 3rem;\n      font-weight: bold;\n      margin: 2rem 0;\n    }\n    hr {\n      margin: 2rem 0;\n    }\n    a.custom-class {\n    }\n    ol {\n      ${media.sm({\n        padding: `0.5rem`,\n        marginLeft: '1rem',\n      })}\n      padding: 0.5rem 1rem;\n    }\n    li {\n      ${media.sm({\n        fontSize: '13px',\n      })}\n      font-size: 16px;\n      padding: 0.5rem 0;\n    }\n  }\n  pre {\n    code,\n    span {\n      ${media.sm({\n        fontSize: '11.5px',\n      })}\n      font-size: 13px;\n    }\n    ${media.sm({\n      fontSize: '10px',\n    })}\n    font-size: 13px;\n  }\n  p {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  a {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  strong {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  h1 {\n    ${media.sm({\n      fontSize: '20px',\n    })}\n    font-size: 30px;\n    font-weight: 700;\n  }\n  h2 {\n    ${media.sm({\n      fontSize: '18px',\n    })}\n    font-size: 26px;\n    font-weight: 700;\n  }\n  h3 {\n    ${media.sm({\n      fontSize: '16px',\n    })}\n    font-size: 23px;\n    font-weight: 700;\n  }\n  ol {\n    ${media.sm({\n      fontSize: '12px',\n    })}\n    font-size: 13px;\n    font-weight: bold;\n  }\n  img,\n  video {\n    margin: 0 auto;\n  }\n  margin-bottom: 10rem;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  h1 {\n    font-size: 40px;\n    ${media.md({\n      fontSize: '30px',\n    })}\n    ${media.sm({\n      fontSize: '25px',\n    })}\n  }\n`;\n\nconst MobileTocContainer = styled.div`\n  display: flex;\n  flex: auto;\n  gap: 1rem;\n  flex-wrap: wrap;\n  overflow: scroll;\n  width: 70%;\n  height: 50vh;\n  position: fixed;\n  padding: 4rem 1.5rem;\n  bottom: 6rem;\n  margin: 0 auto;\n  z-index: 99;\n  background: white;\n  border: 1px solid gray;\n`;\n\nconst TocContainer = styled.div`\n  @media screen and (max-width: 1400px) {\n    display: none;\n  }\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: fixed;\n  top: 10rem;\n  left: 2rem;\n  width: 20rem;\n  border: 1px solid gray;\n  padding: 4rem 2rem;\n  border-radius: 2rem;\n`;\n\nconst TocList = styled.a<{ depth }>`\n  font-size: 1.2rem;\n  margin-left: ${({ depth }) => (depth === 2 ? '1rem' : depth === 3 ? '2rem' : 0)};\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 100%;\n  @media screen and (min-width: 768px) {\n    &:hover {\n      cursor: pointer;\n      color: blue;\n    }\n  }\n  \n  }\n`;\n\nconst Container = styled.div`\n  display: flex;\n`;\n\nconst TocButton = styled.button<{ isOpen }>`\n  position: fixed;\n  bottom: 2rem;\n  left: 2rem;\n  width: 5rem;\n  height: 3rem;\n  border-radius: 5rem;\n  background: ${({ isOpen }) => (isOpen ? 'black' : 'gray')};\n  color: white;\n  font-weight: bold;\n  z-index: 999;\n`;\n"],"sourceRoot":""}