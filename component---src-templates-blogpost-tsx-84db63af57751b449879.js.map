{"version":3,"sources":["webpack://beardfriend-blog/./src/templates/blogpost.tsx"],"names":["Template","markdownRemark","data","frontmatter","html","Image","featuredImg","childImageSharp","fluid","dispatch","useGlobalReducer","useEffect","type","payload","title","BlogLayout","charSet","name","content","subtitle","Title","style","fontStyle","date","className","dangerouslySetInnerHTML","__html","styled","media","width","padding","marginLeft","fontSize"],"mappings":"6OASe,SAASA,EAAT,GAEN,IAAD,IACEC,EADF,EADNC,KAEQD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KACfC,EAAQJ,SAAH,UAAGA,EAAgBK,mBAAnB,iBAAG,EAA6BC,uBAAhC,aAAG,EAA8CC,MACtDC,GAAWC,UAKjB,OAJAC,gBAAU,WACRF,EAAS,CAAEG,KAAM,YAAaC,QAASV,EAAYW,UAClD,IAGD,gBAAC,IAAD,KACE,gBAACC,EAAD,KACE,gBAAC,IAAD,KACE,wBAAMC,QAAQ,UACd,wBAAMC,KAAK,cAAcC,QAASf,EAAYgB,WAC9C,6BAAQhB,EAAYW,MAApB,cAEF,gBAACM,EAAD,KACE,0BAAKjB,EAAYW,OACjB,sBAAIO,MAAO,CAAEC,UAAW,WAAanB,EAAYoB,MACtC,OAAVlB,GAAkB,gBAAC,IAAD,CAAKG,MAAOH,IAC/B,4BAEF,2BACA,uBAAKmB,UAAU,OAAOC,wBAAyB,CAAEC,OAAQtB,OAM1D,IAoBDW,EAAaY,oBAAH,4DAAGA,CAAH,giBAMZC,OAAS,CACTC,MAAO,UAEPD,OAAS,CACTC,MAAO,UAEPD,OAAS,CACTC,MAAO,QAEPD,OAAS,CACTC,MAAO,QAILD,OAAS,CACTC,MAAO,SAILD,OAAS,CACTE,QAAQ,aAYRF,OAAS,CACTE,QAAQ,SACRC,WAAY,SAKZH,OAAS,CACTI,SAAU,SASVJ,OAAS,CACTI,SAAU,WAIZJ,OAAS,CACTI,SAAU,SAKVJ,OAAS,CACTI,SAAU,SAKVJ,OAAS,CACTI,SAAU,SAKVJ,OAAS,CACTI,SAAU,SAKVJ,OAAS,CACTI,SAAU,SAMVJ,OAAS,CACTI,SAAU,SAMVJ,OAAS,CACTI,SAAU,SAMVJ,OAAS,CACTI,SAAU,UAYVZ,EAAQO,oBAAH,uDAAGA,CAAH,mHASLC,OAAS,CACTI,SAAU,SAEVJ,OAAS,CACTI,SAAU","file":"component---src-templates-blogpost-tsx-84db63af57751b449879.js","sourcesContent":["import Img from 'gatsby-image';\nimport MainLayout from '@Components/Layout/MainLayout';\nimport React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { graphql } from 'gatsby';\nimport { useGlobalReducer } from '@Contexts/context';\nimport media from '@Globals/theme';\nimport styled from 'styled-components';\n\nexport default function Template({\n  data, // this prop will be injected by the GraphQL query below.\n}: any) {\n  const { markdownRemark } = data; // data.markdownRemark holds your post data\n  const { frontmatter, html } = markdownRemark;\n  const Image = markdownRemark?.featuredImg?.childImageSharp?.fluid;\n  const dispatch = useGlobalReducer();\n  useEffect(() => {\n    dispatch({ type: 'SET_TITLE', payload: frontmatter.title });\n  }, []);\n\n  return (\n    <MainLayout>\n      <BlogLayout>\n        <Helmet>\n          <meta charSet='utf-8' />\n          <meta name='description' content={frontmatter.subtitle} />\n          <title>{frontmatter.title} by 수염난친구</title>\n        </Helmet>\n        <Title>\n          <h1>{frontmatter.title}</h1>\n          <h3 style={{ fontStyle: 'italic' }}>{frontmatter.date}</h3>\n          {Image !== null && <Img fluid={Image} />}\n          <hr />\n        </Title>\n        <hr></hr>\n        <div className='html' dangerouslySetInnerHTML={{ __html: html }} />\n      </BlogLayout>\n    </MainLayout>\n  );\n}\n\nexport const pageQuery = graphql`\n  query ($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      featuredImg {\n        childImageSharp {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        subtitle\n        title\n      }\n    }\n  }\n`;\n\nconst BlogLayout = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  img {\n    width: 100%;\n  }\n  ${media.lg({\n    width: '600px',\n  })}\n  ${media.md({\n    width: '560px',\n  })}\n  ${media.sm({\n    width: '90%',\n  })}\n  ${media.xs({\n    width: '95%',\n  })}\n  .html {\n    width: 90%;\n    ${media.md({\n      width: '100%',\n    })}\n    margin: 0 auto;\n    p {\n      ${media.sm({\n        padding: `0.5rem 0`,\n      })}\n      padding: 0.5rem 0;\n    }\n    hr,\n    h1,\n    h2,\n    h3 {\n      margin: 2rem 0;\n    }\n\n    ol {\n      ${media.sm({\n        padding: `0.5rem`,\n        marginLeft: '1rem',\n      })}\n      padding: 0.5rem 1rem;\n    }\n    li {\n      ${media.sm({\n        fontSize: '13px',\n      })}\n      font-size: 16px;\n      padding: 0.5rem 0;\n    }\n  }\n  pre {\n    code,\n    span {\n      ${media.sm({\n        fontSize: '11.5px',\n      })}\n      font-size: 13px;\n    }\n    ${media.sm({\n      fontSize: '10px',\n    })}\n    font-size: 13px;\n  }\n  p {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  a {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  strong {\n    ${media.sm({\n      fontSize: '13px',\n    })}\n    font-size: 16px;\n  }\n  h1 {\n    ${media.sm({\n      fontSize: '20px',\n    })}\n    font-size: 30px;\n    font-weight: 700;\n  }\n  h2 {\n    ${media.sm({\n      fontSize: '18px',\n    })}\n    font-size: 26px;\n    font-weight: 700;\n  }\n  h3 {\n    ${media.sm({\n      fontSize: '16px',\n    })}\n    font-size: 23px;\n    font-weight: 700;\n  }\n  ol {\n    ${media.sm({\n      fontSize: '12px',\n    })}\n    font-size: 13px;\n    font-weight: bold;\n  }\n  img,\n  video {\n    margin: 0 auto;\n  }\n  margin-bottom: 10rem;\n`;\n\nconst Title = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n\n  flex-direction: column;\n  gap: 20px;\n  justify-content: center;\n  h1 {\n    font-size: 40px;\n    ${media.md({\n      fontSize: '30px',\n    })}\n    ${media.sm({\n      fontSize: '25px',\n    })}\n  }\n`;\n"],"sourceRoot":""}