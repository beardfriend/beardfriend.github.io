{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Layout/Grid.tsx","webpack://gatsby-starter-default/./src/components/Post/index.tsx","webpack://gatsby-starter-default/./src/pages/index.tsx"],"names":["children","GridContainer","styled","blogPost","useStaticQuery","allMarkdownRemark","edges","map","nodes","node","Layout","key","id","Link","to","fields","slug","ImageBox","featuredImg","childImageSharp","fixed","className","TextBox","frontmatter","title","tags","tag","w","h","fontSize","mr","mt","style","position","bottom","date","media","width","height","padding","useState","useRef","MainLayout","Post"],"mappings":"0MAQA,EAJa,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACd,OAAO,gBAACC,EAAD,KAAgBD,IAKnBC,EAAgBC,oBAAH,2DAAGA,CAAH,+E,kDC+DnB,EAjEc,WACZ,IA2BMC,GA3BOC,oBAAe,cA2BNC,kBAAkBC,MAExC,OACE,gCACGH,EAASI,KAAI,SAACC,GACb,IAAQC,EAASD,EAATC,KACR,OACE,gBAACC,EAAD,CAAQC,IAAKF,EAAKG,IAChB,gBAAC,EAAAC,KAAD,CAAMC,GAAIL,EAAKM,OAAOC,MACpB,gBAACC,EAAD,KAC8C,OAA3CR,EAAKS,YAAYC,gBAAgBC,OAChC,gBAAC,IAAD,CAAKC,UAAU,MAAMD,MAAOX,EAAKS,YAAYC,gBAAgBC,UAInE,gBAACE,EAAD,KACE,gBAAC,EAAAT,KAAD,CAAMC,GAAIL,EAAKM,OAAOC,MACpB,0BAAKP,EAAKc,YAAYC,QAEvBf,EAAKc,YAAYE,KAAKlB,KAAI,SAACmB,GAC1B,OACE,gCACE,gBAAC,IAAD,CAAQC,EAAE,OAAOC,EAAE,OAAOC,SAAS,OAAOC,GAAI,EAAGC,GAAI,GAClDL,OAKT,qBAAGM,MAAO,CAAEC,SAAU,WAAYC,OAAQ,IAAMzB,EAAKc,YAAYY,aAWzEzB,EAASR,oBAAH,wDAAGA,CAAH,+NACRkC,OAAS,CACTC,MAAO,QACPC,OAAQ,QACRC,QAAS,IAYPH,OAAS,CACTP,SAAU,UAcVZ,EAAWf,oBAAH,0DAAGA,CAAH,4CAIVkC,OAAS,CACTC,MAAO,WAILf,EAAUpB,oBAAH,yDAAGA,CAAH,oFAMTkC,OAAS,CACTE,OAAQ,OACRT,SAAU,MACVU,QAAS,YCvGb,EAdc,WACZ,OAA0BC,cAAS,GACnC,GADA,WACwBA,cAAS,KAAjC,WACYC,YAAO,GAEnB,OACE,gBAACC,EAAA,EAAD,KACE,gBAAC,EAAD,KACE,gBAACC,EAAD","file":"component---src-pages-index-tsx-17e550687f6012f1bc76.js","sourcesContent":["import React from 'react';\nimport { media } from '@Globals/theme';\nimport styled from 'styled-components';\n\nconst Grid = ({ children }) => {\n  return <GridContainer>{children}</GridContainer>;\n};\n\nexport default Grid;\n\nconst GridContainer = styled.div`\n  display: grid;\n  gap: 20px;\n\n  justify-content: center;\n  display: flex;\n  flex-wrap: wrap;\n`;\n","import { Link, graphql, useStaticQuery } from 'gatsby';\n\nimport { Button } from '@chakra-ui/react';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport { media } from '@Globals/theme';\nimport styled from 'styled-components';\n\nconst index = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            id\n            featuredImg {\n              childImageSharp {\n                fixed(width: 400, height: 200) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            fields {\n              slug\n            }\n            frontmatter {\n              tags\n              title\n              date(formatString: \"YYYY.MM.DD\")\n              subtitle\n            }\n          }\n        }\n      }\n    }\n  `);\n  const blogPost = data.allMarkdownRemark.edges;\n\n  return (\n    <>\n      {blogPost.map((nodes: any) => {\n        const { node } = nodes;\n        return (\n          <Layout key={node.id}>\n            <Link to={node.fields.slug}>\n              <ImageBox>\n                {node.featuredImg.childImageSharp.fixed !== null && (\n                  <Img className='img' fixed={node.featuredImg.childImageSharp.fixed} />\n                )}\n              </ImageBox>\n            </Link>\n            <TextBox>\n              <Link to={node.fields.slug}>\n                <h1>{node.frontmatter.title}</h1>\n              </Link>\n              {node.frontmatter.tags.map((tag) => {\n                return (\n                  <>\n                    <Button w='20px' h='30px' fontSize='10px' mr={1} mt={3}>\n                      {tag}\n                    </Button>\n                  </>\n                );\n              })}\n              <p style={{ position: 'absolute', bottom: 0 }}>{node.frontmatter.date}</p>\n            </TextBox>\n          </Layout>\n        );\n      })}\n    </>\n  );\n};\n\nexport default index;\n\nconst Layout = styled.div`\n  ${media.md({\n    width: '300px',\n    height: '340px',\n    padding: 0\n  })}\n  width: 400px;\n  height: 400px;\n\n  border-bottom: 1px solid #dddddd;\n\n  box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\n  h1 {\n    cursor: pointer;\n    font-size: 22px;\n    font-weight: bold;\n    ${media.md({\n      fontSize: '15px'\n    })}\n  }\n\n  a {\n    text-decoration: none;\n    &:hover,\n    :active,\n    :visited {\n      color: black;\n    }\n  }\n`;\n\nconst ImageBox = styled.div`\n  display: flex;\n  justify-content: center;\n\n  ${media.md({\n    width: '300px'\n  })}\n`;\n\nconst TextBox = styled.div`\n  margin-top: 10px;\n  position: relative;\n  height: 150px;\n  padding: 1rem;\n  font-size: 12px;\n  ${media.md({\n    height: '90px',\n    fontSize: '8px',\n    padding: '0 1rem'\n  })};\n`;\n","import React, { useRef, useState } from 'react';\n\nimport Grid from '@Components/Layout/Grid';\nimport Header from '@Components/Header';\nimport MainLayout from '@Components/Layout/MainLayout';\nimport Post from '@Components/Post/index';\n\nconst Index = () => {\n  const [count, setCount] = useState(0);\n  const [text, setText] = useState('');\n  const ref = useRef(0);\n\n  return (\n    <MainLayout>\n      <Grid>\n        <Post />\n      </Grid>\n    </MainLayout>\n  );\n};\n\nexport default Index;\n"],"sourceRoot":""}