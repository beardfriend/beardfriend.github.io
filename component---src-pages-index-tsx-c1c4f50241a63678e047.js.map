{"version":3,"sources":["webpack://beardfriend-blog/./src/components/Post/Post.tsx","webpack://beardfriend-blog/./src/components/TagList/TagList.tsx","webpack://beardfriend-blog/./src/components/Category/CategoryList.tsx","webpack://beardfriend-blog/./src/pages/index.tsx"],"names":["PostUI","node","Layout","Link","to","fields","slug","featuredImg","childImageSharp","fixed","className","fluid","frontmatter","title","subtitle","tags","map","tag","key","id","style","position","bottom","date","useGlboalState","NowCategory","NowTag","blogPost","useStaticQuery","allMarkdownRemark","edges","length","nodes","filter","includes","category","styled","media","height","minHeight","fontSize","data","dispatch","isMobile","useGlobalReducer","AllTag","useEffect","newTag","count","type","result","obj","search","find","tagname","undefined","push","sort","a","b","x","toLowerCase","y","payload","TagContainer","display","gap","justifyContent","marginBottom","cursor","top","onClick","datas","index","Tag","isActive","handleChangeTag","AllCategory","empty","categories","console","log","CategoryContainer","CategoryButton","asddd","MainLayout","Helmet","charSet","name","content","MainContainer","PostContainer","marginRight","width","css"],"mappings":"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","file":"component---src-pages-index-tsx-c1c4f50241a63678e047.js","sourcesContent":["import media from '@Globals/theme';\nimport { useGlboalState } from '@Contexts/context';\nimport { graphql, Link, useStaticQuery } from 'gatsby';\nimport Img from 'gatsby-image';\nimport React from 'react';\nimport styled from 'styled-components';\n\nfunction PostUI({ node }) {\n  return (\n    <Layout>\n      <Link to={node.fields.slug}>\n        {node.featuredImg.childImageSharp.fixed !== null && (\n          <Img className='img' fluid={node.featuredImg.childImageSharp.fluid} />\n        )}\n      </Link>\n\n      <Link to={node.fields.slug}>\n        <h1 className='title'>{node.frontmatter.title}</h1>\n      </Link>\n      <p className='subtitle'>{node.frontmatter.subtitle}</p>\n      <div className='tagContainer'>\n        {node.frontmatter.tags?.map((tag: any) => {\n          return <h2 key={tag.id}>#{tag}</h2>;\n        })}\n      </div>\n\n      <p style={{ position: 'absolute', bottom: '2rem' }}>{node.frontmatter.date}</p>\n    </Layout>\n  );\n}\n\nfunction Post() {\n  const { NowCategory, NowTag } = useGlboalState();\n  const data = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            id\n            featuredImg {\n              childImageSharp {\n                fluid(maxWidth: 1000, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n              }\n            }\n            fields {\n              slug\n            }\n            frontmatter {\n              tags\n              title\n              category\n              date(formatString: \"YYYY.MM.DD\")\n              subtitle\n            }\n          }\n        }\n      }\n    }\n  `);\n  const blogPost = data.allMarkdownRemark.edges;\n\n  if (NowCategory === 'All') {\n    if (NowTag.length === 0) {\n      return (\n        <>\n          {blogPost.map((nodes: any) => {\n            const { node } = nodes;\n            return <PostUI key={node.id} node={node} />;\n          })}\n        </>\n      );\n    }\n    return (\n      <>\n        {blogPost.map((nodes: any) => {\n          const { node } = nodes;\n          if (NowTag.filter((tag) => node.frontmatter.tags?.includes(tag)).length > 0) {\n            return <PostUI key={node.id} node={node} />;\n          }\n        })}\n      </>\n    );\n  }\n  if (NowTag.length === 0) {\n    return (\n      <>\n        {blogPost.map((nodes: any) => {\n          const { node } = nodes;\n          if (node.frontmatter.category === NowCategory) {\n            return <PostUI key={node.id} node={node} />;\n          }\n        })}\n      </>\n    );\n  }\n  return (\n    <>\n      {blogPost.map((nodes: any) => {\n        const { node } = nodes;\n        if (node.frontmatter.category === NowCategory) {\n          if (NowTag.filter((tag) => node.frontmatter.tags?.includes(tag)).length > 0) {\n            return <PostUI key={node.id} node={node} />;\n          }\n        }\n      })}\n    </>\n  );\n}\n\nexport default Post;\n\nconst Layout = styled.div`\n  position: relative;\n  width: 100%;\n  max-width: 850px;\n  height: 55rem;\n  ${media.xs({\n    height: '30rem',\n  })}\n  border-bottom: 1px solid #dddddd;\n  a {\n    text-decoration: none;\n    &:hover,\n    :active,\n    :visited {\n      color: black;\n    }\n  }\n  .img {\n    min-width: 100%;\n    min-height: 40rem;\n    height: 40rem;\n    ${media.xs({\n      minHeight: '20rem',\n      height: '20rem',\n    })}\n  }\n  .title {\n    cursor: pointer;\n    font-size: 3rem;\n    font-weight: bold;\n    margin-top: 1rem;\n    ${media.md({\n      fontSize: '15px',\n    })}\n  }\n  .tagContainer {\n    display: flex;\n    gap: 1rem;\n    margin-top: 1rem;\n  }\n  .subtitle {\n    position: absolute;\n    right: 0;\n    font-size: 1.5rem;\n    text-align: right;\n  }\n`;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalReducer, useGlboalState } from '@Contexts/context';\nimport { GrPowerReset } from 'react-icons/gr';\nfunction TagList({ data, isMobile }) {\n  const dispatch = useGlobalReducer();\n  const { NowCategory, AllTag, NowTag } = useGlboalState();\n\n  useEffect(() => {\n    const newTag = [];\n    const count: { [property: string]: string }[] = [];\n    dispatch({ type: 'RESET_TAG' });\n    const result = data.map(({ node }) => {\n      if (node.frontmatter.tags === null) {\n        return;\n      }\n      if (NowCategory === 'All') {\n        node.frontmatter.tags.map((tag) => {\n          let obj = {};\n          const search = count.find((data) => data.tagname === tag);\n          if (search !== undefined) {\n            search.count += 1;\n          } else {\n            obj = { count: 1, tagname: tag };\n            count.push(obj);\n          }\n          if (newTag.includes(tag) === false) {\n            newTag.push(tag);\n          }\n        });\n      }\n      if (node.frontmatter.category === NowCategory) {\n        node.frontmatter.tags.map((tag) => {\n          let obj = {};\n          const search = count.find((data) => data.tagname === tag);\n          if (search !== undefined) {\n            search.count += 1;\n          } else {\n            obj = { count: 1, tagname: tag };\n            count.push(obj);\n          }\n          if (newTag.includes(tag) === false) {\n            newTag.push(tag);\n          }\n        });\n      }\n    });\n\n    //\n\n    if (NowCategory === 'All') {\n      count\n        .sort(function (a, b) {\n          let x = a.tagname.toLowerCase();\n          let y = b.tagname.toLowerCase();\n          if (x < y) {\n            return -1;\n          }\n          if (x > y) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((tags) => {\n          dispatch({ type: 'TAG_MAP', payload: tags });\n        });\n    } else {\n      count\n        .sort(function (a, b) {\n          let x = a.tagname.toLowerCase();\n          let y = b.tagname.toLowerCase();\n          if (x < y) {\n            return -1;\n          }\n          if (x > y) {\n            return 1;\n          }\n          return 0;\n        })\n        .map((tags) => {\n          dispatch({ type: 'TAG_MAP', payload: tags });\n        });\n    }\n\n    return () => result;\n  }, [NowCategory]);\n\n  useEffect(() => {}, [NowTag]);\n  function handleChangeTag(datas) {\n    if (!NowTag.includes(datas.tagname)) {\n      dispatch({ type: 'ADD_NOW_TAG', payload: datas.tagname });\n      return;\n    }\n    dispatch({ type: 'DELETE_NOW_TAG', payload: datas.tagname });\n  }\n\n  return (\n    <TagContainer>\n      <div style={{ display: 'flex', gap: '2rem', justifyContent: 'center', marginBottom: '1rem' }}>\n        <h1>TAG</h1>\n        <GrPowerReset\n          style={{ fontSize: '2rem', cursor: 'pointer', position: 'relative', top: '.5rem' }}\n          onClick={() => dispatch({ type: 'RESET_NOW_TAG' })}\n        />\n      </div>\n      {AllTag.map((datas, index) => {\n        return (\n          <Tag\n            type='button'\n            isActive={NowTag.includes(datas.tagname)}\n            key={index}\n            onClick={() => handleChangeTag(datas)}\n          >\n            {datas.tagname}\n            <span>({datas.count})</span>\n          </Tag>\n        );\n      })}\n    </TagContainer>\n  );\n}\n\nexport default TagList;\nconst TagContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  position: fixed;\n  top: 20rem;\n  width: 20rem;\n  h1 {\n    font-size: 2rem;\n    text-align: center;\n  }\n`;\nconst Tag = styled.button<{ isActive?: boolean }>`\n  padding: 0.8rem 1.4rem;\n  margin-left: 20px;\n  color: ${({ isActive }) => (isActive ? 'white' : 'black')};\n  font-size: 1.5rem;\n\n  background: ${({ isActive }) => (isActive ? 'black' : 'white')};\n\n  &:hover {\n    cursor: pointer;\n    background: ${({ isActive }) => !isActive && '#ebebeb'};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useGlobalReducer, useGlboalState } from '@Contexts/context';\n\nfunction CategoryList({ data }) {\n  const dispatch = useGlobalReducer();\n  const { AllCategory, NowCategory } = useGlboalState();\n\n  useEffect(() => {\n    const empty = [];\n    const result = data.map(({ node }) => {\n      if (AllCategory.includes(node.frontmatter.category)) {\n        return;\n      }\n      const filteredCategory = empty.includes(node.frontmatter.category);\n      if (!filteredCategory) {\n        empty.push(node.frontmatter.category);\n      }\n    });\n    empty.sort().map((categories) => {\n      dispatch({ type: 'CATEGORY_MAP', payload: categories });\n    });\n    console.log(empty);\n    return () => result;\n  }, []);\n\n  return (\n    <CategoryContainer>\n      {AllCategory.map((datas) => {\n        return (\n          <CategoryButton\n            key={datas}\n            isActive={datas === NowCategory}\n            type='button'\n            onClick={() => {\n              dispatch({ type: 'NOW_CATEGORY', payload: datas });\n            }}\n          >\n            {datas}\n          </CategoryButton>\n        );\n      })}\n    </CategoryContainer>\n  );\n}\n\nexport default CategoryList;\n\nconst CategoryContainer = styled.div`\n  overflow-x: auto;\n  overflow-y: hidden;\n  white-space: nowrap;\n`;\n\nconst CategoryButton = styled.button<{ isActive: boolean }>`\n  display: inline;\n  padding: 0.8rem 1.4rem;\n\n  &:not(:first-child) {\n    margin-left: 2rem;\n  }\n  color: ${({ isActive }) => (isActive ? 'white' : 'black')};\n  font-size: 1.3rem;\n  border: 1px solid #ebebeb;\n  border-radius: 1rem;\n  background: ${({ isActive }) => (isActive ? 'black' : 'white')};\n  width: fit-content;\n  &:hover {\n    cursor: pointer;\n    background: ${({ isActive }) => !isActive && '#ebebeb'};\n  }\n`;\n","import React, { useEffect } from 'react';\nimport { Helmet } from 'react-helmet';\nimport styled, { css } from 'styled-components';\nimport MainLayout from '@Components/Layout/MainLayout';\nimport Post from '@Components/Post/Post';\nimport TagList from '@Components/TagList/TagList';\nimport CategoryList from '@Components/Category/CategoryList';\nimport { useGlboalState, useGlobalReducer } from '@Contexts/context';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nfunction Index() {\n  const datas = useStaticQuery(graphql`\n    query {\n      allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n        edges {\n          node {\n            frontmatter {\n              tags\n              category\n            }\n          }\n        }\n      }\n    }\n  `);\n  const asddd = datas.allMarkdownRemark.edges;\n  const dispatch = useGlobalReducer();\n  const { isMobile } = useGlboalState();\n  useEffect(() => {\n    dispatch({ type: 'SET_TITLE', payload: '' });\n  }, []);\n\n  return (\n    <MainLayout>\n      <Helmet>\n        <meta charSet='utf-8' />\n        <title>수염난친구블로그 : Home</title>\n        <meta name='description' content='수염난친구 블로그입니다!'></meta>\n      </Helmet>\n      <CategoryList data={asddd} />\n      <MainContainer isMobile={isMobile}>\n        <PostContainer isMobile={isMobile}>\n          <Post />\n        </PostContainer>\n        {!isMobile && (\n          <div style={{ marginRight: 0, width: '20rem' }}>\n            <TagList data={asddd} isMobile={isMobile} />\n          </div>\n        )}\n      </MainContainer>\n    </MainLayout>\n  );\n}\n\nexport default Index;\n\nconst MainContainer = styled.div<{ isMobile }>`\n  ${({ isMobile }) => {\n    if (!isMobile)\n      return css`\n        display: flex;\n        gap: 5rem;\n        position: relative;\n        margin-top: 5rem;\n      `;\n  }}\n`;\n\nconst PostContainer = styled.div<{ isMobile }>`\n  display: flex;\n  flex-direction: column;\n  gap: 5rem;\n  ${({ isMobile }) => {\n    if (!isMobile) {\n      return css`\n        width: calc(100% - 25rem);\n      `;\n    }\n    return css`\n      margin-top: 5rem;\n    `;\n  }}\n`;\n"],"sourceRoot":""}